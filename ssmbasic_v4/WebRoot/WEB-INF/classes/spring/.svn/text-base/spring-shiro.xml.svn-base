<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd" default-lazy-init="true">

    <description>Shiro Configuration</description>
    
    <!-- 定义Shiro安全管理配置 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="systemAuthorizingRealm" />
        <property name="cacheManager" ref="shiroCacheManager" />
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!-- Shiro权限过滤过滤器定义 -->
    <bean name="shiroFilterChainDefinitions" class="java.lang.String">
        <constructor-arg>
            <value>
                <!-- anon表示此地址不需要任何权限即可访问 -->  
                /static/**=anon
                /common/**=anon
                /uploadtemp/**=anon
                /doLogin=anon
                /index.jsp=anon
                <!-- perms[user:query]表示访问此连接需要权限为user:query的用户 -->  
                /user/list=authc,perms[user:query]
                /user/*/show=perms["user:query,user:show:*"]
                /user/*/edit=perms[user:edit]
                <!-- roles[manager]表示访问此连接需要用户的角色为manager -->  
                /user/listAjax=roles["admin,manager"]
                /user/save=roles[manager]
                /user/del/**=roles[admin]
                <!--所有的请求(除去配置的静态资源请求或请求地址为anon的请求及配过perms,roles的)都要每次重新通过登录验证,如果未登录则跳到/login-->    
                /** = authc
            </value>
        </constructor-arg>
    </bean>
    
    <!-- 安全认证过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 调用我们配置的权限管理器 -->   
        <property name="securityManager" ref="securityManager"/>   
        <!-- 配置我们的登录请求地址 -->   
        <property name="loginUrl" value="/login"/>
        <!-- 配置我们在登录页登录成功后的跳转地址，如果你访问的是非/login地址，则跳到您访问的地址 -->  
        <property name="successUrl" value="/user/list"/>    
        <!-- 如果您请求的资源不再您的权限范围，则跳转到/403请求地址 -->  
        <property name="unauthorizedUrl" value="/403"/>
        <!-- 自定义重写同名Filter为了解决Ajax问题 -->
        <property name="filters">
        	<map>
        		<entry key="authc">
        			<bean class="com.guoxin.common.security.MyFormAuthenticationFilter"/>
        		</entry>
        		<entry key="perms">
        			<bean class="com.guoxin.common.security.PermissionsAuthorizationFilter"/>
        		</entry>
        		<entry key="roles">
        			<bean class="com.guoxin.common.security.RolesAuthorizationFilter"/>
        		</entry>
        	</map>
        </property>
        
        <property name="filterChainDefinitions">
            <ref bean="shiroFilterChainDefinitions"/>
        </property>
    </bean>
    
    
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
    
<!--     <bean class="org.apache.shiro.web.filter.authz.RolesAuthorizationFilter" /> -->
    
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    
    <!-- AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    
    <!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg value="sid"/>
	    <property name="httpOnly" value="true"/>
	    <property name="maxAge" value="-1"/>
	</bean>
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg value="rememberMe"/>
	    <property name="httpOnly" value="true"/>
	    <property name="maxAge" value="604800"/> <!-- 7天不用登录 -->
	</bean>
    
    <!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
	    <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
	     <property name="cookie" ref="rememberMeCookie"/>
	</bean>
</beans>