### 日志打印在控制台  ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss SSS} %5p %c{1}:%L - %m%n
### 日志文件生成目录###
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.File=${webApp.root.ssmbasic}/WEB-INF/logs/tagspider.log
log4j.appender.file.Threshold=INFO
log4j.appender.file.Append=false
log4j.appender.file.Encoding=UTF-8
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%-d{yyyy-MM-dd HH\:mm\:ss} %p %t %c - %m%n
#全局控制
log4j.rootLogger=warn,stdout,file

#关闭Spring日志  
log4j.category.org.springframework=OFF
#单独指定Spring日志,不受全局控制
#log4j.logger.org.springframework=INFO
#log4j.additivity.org.springframework = false

#关闭Struts2日志--OFF
log4j.category.org.apache.struts2=INFO
log4j.category.com.opensymphony.xwork2=INFO

#MyBatis日志
log4j.logger.java.sql.ResultSet=DEBUG
log4j.logger.org.apache=INFO
log4j.logger.java.sql.Connection=INFO
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG

#Ddruid中SQL日志
log4j.logger.druid.sql.DataSource=WARN
log4j.logger.druid.sql.Connection=WARN
log4j.logger.druid.sql.Statement=WARN
log4j.logger.druid.sql.ResultSet=WARN

#MyBatis日志级别配置。以下是配置com.abc.mapper  
#包下所有类的日志级别  
#log4j.logger.com.abc.mapper=DEBUG 
#可用以下的10和11行分别配置TeacherMapper和TeacherMapper的getById方法的日志级别
#以log4j.logger.com.abc.mapper为前缀，表明 log4j.logger.com.abc.mapper是其父logger。其他以此类推  
#log4j.logger.com.abc.mapper.TeacherMapper=TRACE 
#log4j.logger.com.abc.mapper.TeacherMapper.getById=INFO 
